@using System.Web.Optimization
@*@using NavigationRoutes*@


@model iDAS.Models.ModelStudent
@{
    ViewBag.Title = "Admin Login";
    Layout = "~/Views/Shared/_MerchantLayout.cshtml";
}


<script type="text/javascript">


    $(document).ready(function () {
        debugger;
        $("#fmGetproductGroupItem").submit();

        $('[id*=DateOf]').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_2"
        }, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
        $('#LeaveDate').daterangepicker({
            singleDatePicker: true,
            calender_style: "picker_2"
        }, function (start, end, label) {
            console.log(start.toISOString(), end.toISOString(), label);
        });
    });

    function OngetproductGroupItem(response) {
        if (response > 0) {

        }
    }


</script>


<div class="x_panel">

    <div class="x_content">
        @Html.Partial("_alerts")
        @Html.Partial("_validationSummary")
        <br />
        @using (Html.BeginForm("CreateStudentInfo", "StudentData", FormMethod.Post, new { @class = "form-horizontal", id = "frmsubmit" }))
        {
                         
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                    Registrtion # <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.RegNo, new { @class = "form-control col-md-7 col-xs-12" })
                    @Html.ValidationMessageFor(m => m.RegNo, string.Empty, new { @class = "help-block error" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                    Computer Code<span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.ComputerCode, new { @class = "form-control col-md-7 col-xs-12", @type = "number", })
                    @Html.ValidationMessageFor(m => m.ComputerCode, string.Empty, new { @class = "help-block error" })
                </div>
            </div>
                          
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                    Student Name <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.StudentName, new { @class = "form-control col-md-7 col-xs-12" })

                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="last-name">
                    Father Name<span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FatherName, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                <label for="middle-name" class="control-label col-md-3 col-sm-3 col-xs-12">Address</label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">Gender</label>
                <div class="col-md-6 col-sm-6 col-xs-12">

                 @*  <div data-toggle="buttons" class="btn-group" id="gender">
                       @Html.LabelFor(m=>m.Sex, new { @class = "btn btn-default", data_toggle_passive_class = "btn-default", data_toggle_class = "btn-primary" })
                        @Html.RadioButtonFor(model => model.Sex, "male", new { data_parsley_multiple = "gender" , name="gender" })
                       @Html.LabelFor(m=>m.Sex, new { @class = "btn btn-default", data_toggle_passive_class = "btn-default", data_toggle_class = "btn-primary" })
                        @Html.RadioButtonFor(model => model.Sex, "female", new { data_parsley_multiple = "gender" , name="gender"})
                    </div>*@
                       @Html.DropDownList("Sex", new List<SelectListItem>
{
  new SelectListItem{ Text = "Male", Value = "0" },
  new SelectListItem{ Text = "female", Value = "1" } 
}, new { @class = "form-control valid" })
                </div>
            
         </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Class <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(x => x.ClassId, new SelectList(ViewBag.dpClass, "Value", "Text", "Selected"), new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Section <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(x => x.SectionId, new SelectList(ViewBag.dpSection, "Value", "Text", "Selected"), new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Fee <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.MonthlyFee, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">Date of Birth</label>
                <div class="col-md-6 col-sm-6 col-xs-12 xdisplay_inputx form-group has-feedback">
                    @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control has-feedback-left", @placeholder = "Date of Birth" })

                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    <span id="inputSuccess2Status2" class="sr-only">(success)</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Address: <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Home Phone <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.HomeNumber, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Mobile No <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.MoblieNumber, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Date Of Birth <span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.OfficeNumber, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>@*
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">
                            Admission Date <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                          @Html.TextBoxFor(m => m.DateOfAdmission, new { @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>*@

            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">Date of Addmission</label>
                <div class="col-md-6 col-sm-6 col-xs-12 xdisplay_inputx form-group has-feedback">

                    @Html.TextBoxFor(m => m.DateOfAdmission, new { @class = "form-control has-feedback-left", @placeholder = "Date of Admission" })
                    <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                    <span id="inputSuccess2Status2" class="sr-only">(success)</span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12">
                    Reference<span class="required">*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextAreaFor(m => m.Reference, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>

@*<div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">
                            Present<span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.CheckBoxFor(m => m., htmlAttributes: new { @checked = true })

                        </div>
                    </div>*@
            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">

                    <input type="submit" class="btn btn-success" value="Submit">
                </div>
            </div>
        }
    </div>
</div>
<div id="divCategoriesList">
</div>
@using (Ajax.BeginForm("GetAllStudentData", "Student", null, new AjaxOptions()
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "divCategoriesList",
    OnSuccess = "OngetproductGroupItem"

}, new { id = "fmGetproductGroupItem" }))
{

}